{"mappings":"YAeC,IACOA,EACAC,EACAC,EAEAC,GApBP,WACG,IAAMC,EAAO,CACXC,aAAcC,SAASC,cAAc,qBACrCC,cAAeF,SAASC,cAAc,sBACtCE,MAAOH,SAASC,cAAc,iBAMhC,SAASG,IACPN,EAAKK,MAAME,UAAUC,OAAO,Y,CAJ9BR,EAAKC,aAAaQ,iBAAiB,QAASH,GAC5CN,EAAKI,cAAcK,iBAAiB,QAASH,EAKhD,CAbA,GAgBOV,EAAaM,SAASC,cAAc,sBACpCN,EAAcK,SAASC,cAAc,iBACrCL,EAAeI,SAASC,cAAc,kBAEtCJ,EAAa,WACjB,IAAMW,EAC0C,SAA9Cb,EAAYc,aAAa,mBAA+B,EAC1Dd,EAAYe,aAAa,iBAAkBF,GAC3Cd,EAAWW,UAAUC,OAAO,WAK5BK,eAH0BH,EAEtB,mBADA,qBAE6BR,SAASY,K,EAG5CjB,EAAYY,iBAAiB,QAASV,GACtCD,EAAaW,iBAAiB,QAASV,GAGvCgB,OAAOC,WAAW,sBAAsBP,iBAAiB,UAAU,SAAAQ,GAC5DA,EAAEC,UACPtB,EAAWW,UAAUY,OAAO,WAC5BtB,EAAYe,aAAa,iBAAiB,GAC1CC,eAAeO,iBAAiBlB,SAASY,M,IAI9B,IAAIO,OAAO,UAAW,CAElCC,UAAW,WACXC,MAAM,EAGNC,WAAY,CACVC,GAAI,sBAINC,WAAY,CACVC,OAAQ,sBACRC,OAAQ,uBAIVC,UAAW,CACTJ,GAAI,sB","sources":["src/index.js"],"sourcesContent":["(() => {\n    const refs = {\n      openModalBtn: document.querySelector(\"[data-modal-open]\"),\n      closeModalBtn: document.querySelector(\"[data-modal-close]\"),\n      modal: document.querySelector(\"[data-modal]\"),\n    };\n  \n    refs.openModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n  \n    function toggleModal() {\n      refs.modal.classList.toggle(\"is-hidden\");\n    }\n})();\n  \n(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n\n    const scrollLockMethod = !isMenuOpen\n      ? 'disableBodyScroll'\n      : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();\n\nconst swiper = new Swiper('.swiper', {\n   // Optional parameters\n   direction: 'vertical',\n   loop: true,\n \n   // If we need pagination\n   pagination: {\n     el: '.swiper-pagination',\n   },\n \n   // Navigation arrows\n   navigation: {\n     nextEl: '.swiper-button-next',\n     prevEl: '.swiper-button-prev',\n   },\n \n   // And if we need scrollbar\n   scrollbar: {\n     el: '.swiper-scrollbar',\n   },\n });"],"names":["mobileMenu","openMenuBtn","closeMenuBtn","toggleMenu","refs","openModalBtn","document","querySelector","closeModalBtn","modal","toggleModal","classList","toggle","addEventListener","isMenuOpen","getAttribute","setAttribute","bodyScrollLock","body","window","matchMedia","e","matches","remove","enableBodyScroll","Swiper","direction","loop","pagination","el","navigation","nextEl","prevEl","scrollbar"],"version":3,"file":"index.efab6f1f.js.map"}